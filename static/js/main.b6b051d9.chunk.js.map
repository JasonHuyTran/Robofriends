{"version":3,"sources":["Components/Card/Card.js","Components/CardList/CardList.jsx","Components/SearchBox/SearchBox.jsx","Components/Scroll/Scroll.jsx","Containers/App/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","cardsArray","robots","map","user","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSeachChange","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filterRobots","filter","robot","toLocaleLowerCase","includes","toLowerCase","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"mOAeeA,EAbF,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACxB,OACI,sBAAKC,UAAY,+CAAjB,UACI,qBAAKC,IAAM,QAAQC,IAAG,+BAA4BH,KAClD,gCACI,mCAAMF,EAAN,OACA,kCAAKC,EAAL,cCQDK,EAdE,SAAC,GAAc,IACtBC,EADqB,EAAZC,OACWC,KAAI,SAAAC,GAAI,OAC9B,cAAC,EAAD,CAAMR,GAAMQ,EAAKR,GAAID,MAASS,EAAKT,MAAOD,KAAQU,EAAKV,MAAaU,EAAKR,OAI7E,OACI,8BACKK,KCIEI,EAdG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKT,UAAY,MAAjB,SACI,uBACAA,UAAY,mCACZU,KAAO,SACPC,YAAc,gBACdC,SAAYH,OCCTI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAS,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAvE,SACKJ,EAAMK,YC+CJC,G,wDA3CX,aAAe,IAAD,8BACV,gBAcJC,cAAgB,SAACC,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAbzC,EAAKC,MAAQ,CACTtB,OAAQ,GACRmB,YAAa,IALP,E,gEASO,IAAD,OAChBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAClB,OAAQ2B,S,+BAOhC,IAAD,EACyBC,KAAKN,MAA5BtB,EADF,EACEA,OAAQmB,EADV,EACUA,YAETU,EAAe7B,EAAO8B,QAAO,SAAAC,GAC/B,OAAOA,EAAMvC,KAAKwC,oBAAoBC,SAASd,EAAYe,kBAG/D,OAAQlC,EAAOmC,OAGX,sBAAKxC,UAAY,KAAjB,UACI,oBAAIA,UAAY,KAAhB,yBACA,cAAC,EAAD,CAAWS,aAAgBwB,KAAKZ,cAAeG,YAAeA,IAC9D,cAAC,EAAD,UACI,cAAC,EAAD,CAAUnB,OAAU6B,SANhC,6C,GA5BUO,IAAMC,YCMTC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,Q,MCAdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.b6b051d9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id} ) => {\r\n    return (\r\n        <div className = 'bg-light-green dib br3 pa3 ma2 grow shadow-s'>\r\n            <img alt = \"robot\" src = {`https://robohash.org/${id}`} />\r\n            <div>\r\n                <h2> {name} </h2>\r\n                <p> {email} </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Card;","import Card from \"../Card/Card.js\"\r\n\r\nconst CardList = ({robots}) => {\r\n    const cardsArray = robots.map(user => \r\n        <Card id = {user.id} email = {user.email} name = {user.name} key = {user.id}/>\r\n    );\r\n\r\n\r\n    return (\r\n        <div>\r\n            {cardsArray}\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default CardList;","const SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div className = 'pa2'>\r\n            <input \r\n            className = 'pa3 ba b--green bg-lightest-blue' \r\n            type = 'search' \r\n            placeholder = 'search robots'\r\n            onChange = {searchChange}\r\n        \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","const Scroll = (props) => {\r\n    return (\r\n        <div style = {{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from \"react\";\r\nimport CardList from \"../../Components/CardList/CardList.jsx\";\r\nimport SearchBox from \"../../Components/SearchBox/SearchBox\";\r\nimport Scroll from \"../../Components/Scroll/Scroll.jsx\";\r\nimport \"./App.css\"\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            robots: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({robots: users}))\r\n    }\r\n\r\n    onSeachChange = (event) => {\r\n        this.setState({searchField: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        const {robots, searchField} = this.state;\r\n\r\n        const filterRobots = robots.filter(robot => {\r\n            return robot.name.toLocaleLowerCase().includes(searchField.toLowerCase());\r\n        });\r\n\r\n        return !robots.length ? \r\n        <h1>Loading</h1> : \r\n        (\r\n            <div className = \"tc\">\r\n                <h1 className = \"f2\">RoboFriends</h1>\r\n                <SearchBox searchChange = {this.onSeachChange} searchField = {searchField}/>\r\n                <Scroll>\r\n                    <CardList robots = {filterRobots}/>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./Containers/App/App\"\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}